import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { text } from "stream/consumers";
import { Fragment, useState } from "react";

const Home: NextPage = () => {
  const messages = trpc.example.getAll.useQuery();
  
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#02206d] to-[#15232c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            The <span className="text-[hsl(0,0%,51%)]">Areign</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <div className="text-2xl text-white">
              {messages.data ? messages.data.map((message) => 
              <Fragment key={message.id}>
                <div>
                  {message.user.name} said {`"${message.message}"`}
                </div>
              </Fragment>
              ) : "Loading tRPC query..."}
            </div>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();


  const [message, setMessage] = useState('')
  const mutator = trpc.auth.postSecretMessage.useMutation()
  const SubmitHandler = () => {
    console.log('Submitting message')
    mutator.mutateAsync({message}, {
      onSuccess: ()=> {
        console.log('It worked!')
        setMessage('')
      },
      onError: () => {
        console.log('It failed')
        setMessage('')
      }
    })
  }
  


  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      <div className="text-center text-2xl text-white">

      {sessionData &&  (<div className="flex flex-col gap-2">
        <span>Leave a message!  </span>
      <input className="bg-transparent rounded border border-1 text-white" value={message} onChange={(e) => setMessage(e.target.value)} type={"text"}></input>
      <button className="btn" onClick={SubmitHandler}>Submit</button></div>)}       
      </div>
      
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      
    </div>
  );
};
